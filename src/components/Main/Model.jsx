/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Bruno Simon <https://threejs-journey.com>
*/

import * as THREE from 'three'
import { useRef, useState } from 'react'
import { useGLTF, useTexture } from '@react-three/drei'
import { useSpring, animated, config } from '@react-spring/three'
import PageTypography from '../../pages/PageTypography'


export default function Model(props) {
  const bakedTexture = useTexture('../../src/assets/img/baked.jpg')
  const { nodes } = useGLTF('../../src/assets/img/portal.glb')

  const pageDecisions = () => {window.location.href="/decisions"}
  const pageAion = () => {window.location.href="/aion"}
  const pageExtremophiles = () => {window.location.href="/extremophiles"}
  const pageOblivion = () => {window.location.href="/oblivion"}
  const pageToDoList = () => {window.location.href="/todolist"}
  const pageTypography = () => {window.location.href="/typography"}

  
  //Arcades
  ////1
  let [active1, setActive1] = useState(false)
  let { scale1,position1 } = useSpring({
    scale1: active1 ? 1.1 : 1,
    position1: active1 ? [-10.44, 2.35, -7.84] : [-10.44, 2.24, -7.84],
    config: config.wobbly,
  })

  ////2
  let [active2, setActive2] = useState(false)
  let { scale2, position2 } = useSpring({
    scale2: active2 ? 1.1 : 1,
    position2: active2 ? [-10.45, 2.35, -4.11] : [-10.45, 2.24, -4.11],

    config: config.wobbly,
  })

  ////3
  let [active3, setActive3] = useState(false)
  let { scale3, position3 } = useSpring({
    scale3: active3 ? 1.1 : 1,
    position3: active3 ? [-10.49, 2.35, 12.55] : [-10.49, 2.24, 12.55],
    config: config.wobbly,
  })

  ////4
  let [active4, setActive4] = useState(false)
  let { scale4, position4 } = useSpring({
    scale4: active4 ? 1.1 : 1,
    position4: active4 ? [8.91, 2.35, -11] : [8.91, 2.24, -11],

    config: config.wobbly,
  })

  ////5
  let [active5, setActive5] = useState(false)
  let { scale5, position5 } = useSpring({
    scale5: active5 ? 1.1 : 1,
    position5: active5 ? [12.91, 2.35, -10.99] : [12.91, 2.24, -10.99],

    config: config.wobbly,
  })
  
  //TV
  ////6
  let [active6, setActive6] = useState(false)
  let { scale6 } = useSpring({
    scale6: active6 ? 1.1 : 1,
    config: config.wobbly,
  })

  ////7
  let [active7, setActive7] = useState(false)
  let { scale7 } = useSpring({
    scale7: active7 ? 1.1 : 1,
    config: config.wobbly,
  })

  ////8
  let [active8, setActive8] = useState(false)
  let { scale8 } = useSpring({
    scale8: active8 ? 1.1 : 1,
    config: config.wobbly,
  })

  ////9
  let [active9, setActive9] = useState(false)
  let { scale9 } = useSpring({
    scale9: active9 ? 1.1 : 1,
    config: config.wobbly,
  })

  ////10
  let [active10, setActive10] = useState(false)
  let { scale10 } = useSpring({
    scale10: active10 ? 1.1 : 1,
    config: config.wobbly,
  })


  //CAMERA
  //position1
  let [active11, setActive11] = useState(false)
  let [active12, setActive12] = useState(false)

  let { rotation11, rotation12 } = useSpring({
    rotation11: active11 ? [0, -0.75, 0] : [0, 0, 0],
    rotation12: active12 ? [0, 0.75, 0] : [0, 0, 0],

    config: config.wobbly,
  })

  
  return (
    <animated.group {...props} dispose={null} rotation={rotation11}>
      <animated.group rotation={rotation12}>
      <mesh 
        castShadow
        receiveShadow
        geometry={nodes.Cube004.geometry}
        material={nodes.Cube004.material}
        position={[-8.24, 0.96, 3.38]}
        rotation={[-Math.PI, 0, -Math.PI]}> 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube005.geometry}
        material={nodes.Cube005.material}
        position={[-9.28, 0.1, 1.22]}
        rotation={[0, 0, -Math.PI]}> 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube006.geometry}
        material={nodes.Cube006.material}
        position={[-8.23, 0.96, -0.91]}
        rotation={[-Math.PI, 0, -Math.PI]}> 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube007.geometry}
        material={nodes.Cube007.material}
        position={[-11.08, 1.48, -0.46]}
        rotation={[-Math.PI, 0, -Math.PI]}> 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube009.geometry}
        material={nodes.Cube009.material}
        position={[-11.09, 1.48, 2.88]}
        rotation={[-Math.PI, 0, -Math.PI]}> 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube008.geometry}
        material={nodes.Cube008.material}
        position={[-11.1, 1.48, 8.21]}
        rotation={[-Math.PI, 0, -Math.PI]}> 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube010.geometry}
        material={nodes.Cube010.material}
        position={[-8.24, 0.96, 4.42]}
        rotation={[-Math.PI, 0, -Math.PI]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        
        geometry={nodes.Cube011.geometry}
        position={[-9.3, 0.1, 6.55]}
        rotation={[0, 0, -Math.PI]}
        > 
        <meshLambertMaterial color={'#1b021f'} roughness={0}/>
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube012.geometry}
        material={nodes.Cube012.material}
        position={[-8.25, 0.96, 8.7]}
        rotation={[-Math.PI, 0, -Math.PI]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube013.geometry}
        material={nodes.Cube013.material}
        position={[-11.09, 1.48, 5.23]}
        rotation={[-Math.PI, 0, -Math.PI]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      
      <animated.mesh
        scale={scale1} 
        onPointerEnter={() => setActive1(!active1)}
        onPointerLeave={() => setActive1(!active1)}
        onClick={pageAion}
        castShadow
        receiveShadow
        geometry={nodes.arcade002.geometry}
        material={nodes.arcade002.material}
        position={position1} 
        rotation={[-Math.PI, 0, -Math.PI]}
        >
         
        <meshPhysicalMaterial map={bakedTexture} map-flipY={false} roughness={0} />
        </animated.mesh>

      <mesh
        castShadow
        receiveShadow
        geometry={nodes.boton001.geometry}
        material={nodes.boton001.material}
        position={[-10.06, 1.7, -8.27]}
        rotation={[-Math.PI, 0, -2.6]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.boton002.geometry}
        material={nodes.boton002.material}
        position={[-10.06, 1.7, -7.92]}
        rotation={[-Math.PI, 0, -2.6]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.boton010.geometry}
        material={nodes.boton010.material}
        position={[-9.83, 1.57, -8.27]}
        rotation={[-Math.PI, 0, -2.6]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.palanca002.geometry}
        material={nodes.palanca002.material}
        position={[-9.98, 1.65, -7.4]}
        rotation={[-Math.PI, 0, -2.6]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <animated.mesh
        scale={scale2} 
        onPointerEnter={() => setActive2(!active2)}
        onPointerLeave={() => setActive2(!active2)}
        onClick={pageDecisions}

        castShadow
        receiveShadow
        geometry={nodes.arcade001.geometry}
        material={nodes.arcade001.material}
        position={position2}
        rotation={[-Math.PI, 0, -Math.PI]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </animated.mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.boton003.geometry}
        material={nodes.boton003.material}
        position={[-9.84, 1.57, -4.54]}
        rotation={[-Math.PI, 0, -2.6]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.boton004.geometry}
        material={nodes.boton004.material}
        position={[-10.07, 1.7, -4.54]}
        rotation={[-Math.PI, 0, -2.6]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.boton005.geometry}
        material={nodes.boton005.material}
        position={[-10.07, 1.7, -4.19]}
        rotation={[-Math.PI, 0, -2.6]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.palanca001.geometry}
        material={nodes.palanca001.material}
        position={[-9.99, 1.65, -3.67]}
        rotation={[-Math.PI, 0, -2.6]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <animated.mesh
        scale={scale3} 
        onPointerEnter={() => setActive3(!active3)}
        onPointerLeave={() => setActive3(!active3)}
        onClick={() => setActive11(!active11)}

        castShadow
        receiveShadow
        geometry={nodes.arcade003.geometry}
        material={nodes.arcade003.material}
        position={position3}
        rotation={[-Math.PI, 0, -Math.PI]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </animated.mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.boton006.geometry}
        material={nodes.boton006.material}
        position={[-9.89, 1.57, 12.12]}
        rotation={[-Math.PI, 0, -2.6]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.boton007.geometry}
        material={nodes.boton007.material}
        position={[-10.11, 1.7, 12.12]}
        rotation={[-Math.PI, 0, -2.6]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.boton008.geometry}
        material={nodes.boton008.material}
        position={[-10.12, 1.7, 12.47]}
        rotation={[-Math.PI, 0, -2.6]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.palanca003.geometry}
        material={nodes.palanca003.material}
        position={[-10.04, 1.65, 12.98]}
        rotation={[-Math.PI, 0, -2.6]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <animated.mesh        
        scale={scale4} 
        onPointerEnter={() => setActive4(!active4)}    
        onPointerLeave={() => setActive4(!active4)}
        onClick={() => setActive12(!active12)}

        castShadow
        receiveShadow
        geometry={nodes.arcade004.geometry}
        material={nodes.arcade004.material}
        position={position4}
        rotation={[-Math.PI, 1.52, -Math.PI]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </animated.mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.boton009.geometry}
        material={nodes.boton009.material}
        position={[9.37, 1.57, -10.42]}
        rotation={[-Math.PI, 1.52, -2.6]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.boton011.geometry}
        material={nodes.boton011.material}
        position={[9.36, 1.7, -10.64]}
        rotation={[-Math.PI, 1.52, -2.6]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.boton012.geometry}
        material={nodes.boton012.material}
        position={[9, 1.7, -10.63]}
        rotation={[-Math.PI, 1.52, -2.6]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.palanca004.geometry}
        material={nodes.palanca004.material}
        position={[8.5, 1.65, -10.52]}
        rotation={[-Math.PI, 1.52, -2.6]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <animated.mesh
        scale={scale5} 
        onPointerEnter={() => setActive5(!active5)}    
        onPointerLeave={() => setActive5(!active5)}
        onClick={() => setActive12(!active12)}

        castShadow
        receiveShadow
        geometry={nodes.arcade005.geometry}
        material={nodes.arcade005.material}
        position={position5}
        rotation={[-Math.PI, 1.52, -Math.PI]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </animated.mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.boton013.geometry}
        material={nodes.boton013.material}
        position={[13.36, 1.57, -10.41]}
        rotation={[-Math.PI, 1.52, -2.6]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.palanca005.geometry}
        material={nodes.palanca005.material}
        position={[12.49, 1.65, -10.51]}
        rotation={[-Math.PI, 1.52, -2.6]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.boton014.geometry}
        material={nodes.boton014.material}
        position={[13.35, 1.7, -10.63]}
        rotation={[-Math.PI, 1.52, -2.6]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.boton015.geometry}
        material={nodes.boton015.material}
        position={[13, 1.7, -10.62]}
        rotation={[-Math.PI, 1.52, -2.6]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube.geometry}
        material={nodes.Cube.material}
        position={[0.37, 1.55, -0.73]}
        rotation={[-Math.PI, 0, -Math.PI]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.coso_airhockey.geometry}
        material={nodes.coso_airhockey.material}
        position={[0.46, 2.04, 1.32]}
        rotation={[-Math.PI, 0, -Math.PI]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.coso_airhockey001.geometry}
        material={nodes.coso_airhockey001.material}
        position={[0.47, 2.04, -2.87]}
        rotation={[-Math.PI, 0, -Math.PI]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder002.geometry}
        material={nodes.Cylinder002.material}
        position={[-1.78, 2.03, -3.28]}
        scale={[0.63, 0.22, 0.63]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube014.geometry}
        material={nodes.Cube014.material}
        position={[8.05, 1.55, -0.71]}
        rotation={[-Math.PI, 0, -Math.PI]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.coso_airhockey002.geometry}
        material={nodes.coso_airhockey002.material}
        position={[8.14, 2.04, 1.34]}
        rotation={[-Math.PI, 0, -Math.PI]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.coso_airhockey003.geometry}
        material={nodes.coso_airhockey003.material}
        position={[8.15, 2.04, -2.85]}
        rotation={[-Math.PI, 0, -Math.PI]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder004.geometry}
        material={nodes.Cylinder004.material}
        position={[-1.78, 2.03, -3.28]}
        scale={[0.63, 0.22, 0.63]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube015.geometry}
        material={nodes.Cube015.material}
        position={[2.33, 1.55, 8.99]}
        rotation={[0, -1.56, 0]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.coso_airhockey004.geometry}
        material={nodes.coso_airhockey004.material}
        position={[4.38, 2.04, 8.87]}
        rotation={[0, -1.56, 0]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.coso_airhockey005.geometry}
        material={nodes.coso_airhockey005.material}
        position={[0.2, 2.04, 8.93]}
        rotation={[0, -1.56, 0]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder005.geometry}
        material={nodes.Cylinder005.material}
        position={[-1.78, 2.03, -3.28]}
        scale={[0.63, 0.22, 0.63]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh 
        castShadow
        receiveShadow
        geometry={nodes.Cylinder.geometry}
        material={nodes.Cylinder.material}
        position={[4.64, 5.36, -10.34]}
        rotation={[-Math.PI, 0, -Math.PI]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder001.geometry}
        material={nodes.Cylinder001.material}
        position={[4.64, 5.14, -10.34]}
        rotation={[-Math.PI, 0, -Math.PI]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Sphere.geometry}
        material={nodes.Sphere.material}
        position={[4.64, 4.43, -10.34]}
        rotation={[-Math.PI, 0, -Math.PI]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube003.geometry}
        material={nodes.Cube003.material}
        position={[4.64, 0.03, -10.54]}
        rotation={[-Math.PI, 0, -Math.PI]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube001.geometry}
        material={nodes.Cube001.material}
        position={[-4.02, 2.42, -11.66]}
        rotation={[-Math.PI, 0, -Math.PI]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder003.geometry}
        material={nodes.Cylinder003.material}
        position={[-4.21, 2.3, -11.59]}
        rotation={[-Math.PI, 0, -Math.PI]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <animated.mesh
        scale={scale6} 
        onPointerEnter={() => setActive6(!active6)}
        onPointerLeave={() => setActive6(!active6)}
        onClick={pageExtremophiles}

        castShadow
        receiveShadow
        geometry={nodes.Cube002.geometry}
        material={nodes.Cube002.material}
        position={[-4.21, 6.57, -11.68]}
        rotation={[-2.92, 0, 3.14]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </animated.mesh>
      <animated.mesh
        scale={scale7} 
        onPointerEnter={() => setActive7(!active7)}
        onPointerLeave={() => setActive7(!active7)}
        onClick={pageOblivion}

        castShadow
        receiveShadow
        geometry={nodes.Cube016.geometry}
        material={nodes.Cube016.material}
        position={[-8.9, 6.57, -11.69]}
        rotation={[-2.92, 0, 3.14]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
      </animated.mesh>
      <animated.mesh
        scale={scale8} 
        onPointerEnter={() => setActive8(!active8)}
        onPointerLeave={() => setActive8(!active8)}
        onClick={pageToDoList}

        castShadow
        receiveShadow
        geometry={nodes.Cube017.geometry}
        material={nodes.Cube017.material}
        position={[0.5, 6.57, -11.67]}
        rotation={[-2.92, 0, 3.14]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
      </animated.mesh>
      <animated.mesh
        scale={scale9} 
        onPointerEnter={() => setActive9(!active9)}
        onPointerLeave={() => setActive9(!active9)}
        onClick={pageTypography}

        castShadow
        receiveShadow
        geometry={nodes.Cube018.geometry}
        material={nodes.Cube018.material}
        position={[-11.33, 5.18, 1.13]}
        rotation={[-1.58, -1.34, -1.58]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
      </animated.mesh>
      <animated.mesh
        scale={scale10} 
        onPointerEnter={() => setActive10(!active10)}
        onPointerLeave={() => setActive10(!active10)}
        onClick={() => setActive11(!active11)}

        castShadow
        receiveShadow
        geometry={nodes.Cube019.geometry}
        material={nodes.Cube019.material}
        position={[-11.34, 5.18, 6.76]}
        rotation={[-1.58, -1.34, -1.58]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </animated.mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane001.geometry}
        material={nodes.Plane001.material}
        position={[3.23, 9.81, -12.22]}
        rotation={[0, 1.57, -1.57]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane002.geometry}
        material={nodes.Plane002.material}
        position={[3.34, 0, 2.46]}
        rotation={[-Math.PI, 0, -Math.PI]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} roughness={0.1}/>
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane003.geometry}
        material={nodes.Plane003.material}
        position={[-11.89, 9.81, 2.4]}
        rotation={[-Math.PI, 0, Math.PI / 2]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder013.geometry}
        material={nodes.Cylinder013.material}
        position={[3.13, 0.08, -12.12]}
        rotation={[-Math.PI, 0, Math.PI / 2]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder006.geometry}
        material={nodes.Cylinder006.material}
        position={[-11.74, 7.24, 3.04]}
        rotation={[0, 1.57, -1.57]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder007.geometry}
        material={nodes.Cylinder007.material}
        position={[3.54, 8.64, -12.14]}
        rotation={[-Math.PI, 0, Math.PI / 2]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder008.geometry}
        material={nodes.Cylinder008.material}
        position={[-11.74, 8.61, 3.04]}
        rotation={[0, 1.57, -1.57]}
        > 
        <meshStandardMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
        </animated.group>
    </animated.group>
  )
}

useGLTF.preload('../../src/assets/img/portal.glb')


